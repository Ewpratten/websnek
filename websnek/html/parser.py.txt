from .nodes.ElementNode import ElementNode
import re

def _consumeUntil(text, end):
    """
    Generates a list of chars, followed by an index

    hello_ would be:
    ['h', 'e', 'l', 'l', 'o', 5]
    """
    for i, char in enumerate(text):
        if char != end and char != ">":
            yield char
        else:
            yield i
            return

def parseElement(text: str):
    text = text.strip()

    

    # Parse the element name
    name = _consumeUntil(text[1:], " ")
    name_end = list(name)[-1]
    name = text[1:][:name_end]

    print(name)

    # Parse any attributes to a dict
    attrs = _consumeUntil(text[name_end+1:], ">")
    attrs_end = list(attrs)[-1]
    attrs = text[name_end+1:][:attrs_end]
    print(attrs)

    # Check if next section is an ending
    # if text[attrs_end]

    # recurse into contents    

    return ElementNode({
        "name": name
    })

